plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}
ext {
    set('lombokVersion', '1.18.34')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    implementation "org.postgresql:postgresql"
    implementation "org.liquibase:liquibase-core"

    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

//jib {
//    from {
//        image = 'eclipse-temurin:17.0.4.1_1-jre'
//    }
//    to {
//        image = "registry.hub.docker.com/polsky984/${project.name}"
//        auth {
//            username = System.getenv("DOCKER_USERNAME")
//            password = System.getenv("DOCKER_PASSWORD")
//        }
//    }
//    container {
//        ports = ['8080']
//        mainClass = 'myProject.weatherForecAst.WeatherForecastApplication'
//    }
//}
tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
